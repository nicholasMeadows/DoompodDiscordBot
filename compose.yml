services:
  mongo:
    image: mongo:4.4.9
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./db-mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    #    healthcheck:
    #      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    #      interval: 10s
    #      timeout: 10s
    #      retries: 5
    #      start_period: 10s
    healthcheck:
      test:
        [
          "CMD",
          "mongo",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}
    depends_on:
      mongo:
        condition: service_healthy
  bot:
    container_name: doompodDiscordBot
    restart: unless-stopped
    image: nicholasmeadows/doompoddiscordbot
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - TZ=America/Chicago
      - TOKEN=${TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
